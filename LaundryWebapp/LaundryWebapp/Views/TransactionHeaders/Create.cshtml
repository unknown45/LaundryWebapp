@model LaundryWebapp.DataSource.TransactionHeader

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h3>Halaman Transaksi</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <label class="control-label col-md-2">Nama Pelanggan</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CustomerId, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "customer" })
            @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Potongan Harga</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.DiscountPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DiscountPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Harga Total</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalPrice, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @id = "TotalPrice" } })
            @Html.ValidationMessageFor(model => model.TotalPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Perkiraan Selesai</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.EstimationClear, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @id = "EstimationClear" } })
            @Html.ValidationMessageFor(model => model.EstimationClear, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Metode Pembayaran</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PaymentId, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "payment" })
            @Html.ValidationMessageFor(model => model.PaymentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <h4>Detail</h4>

    <table>
        @foreach (var item in Model.TransactionDetails)
        {
            <tr>
                <td>
                    <label class="control-label col-md-2">Menu Cucian</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => item.ItemId, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "item" })
                        @Html.ValidationMessageFor(model => item.ItemId, "", new { @class = "text-danger" })
                    </div>
                </td>

                <td>
                    <label class="control-label col-md-2">Berat (.kg)</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.Weight, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.Weight, "", new { @class = "text-danger" })
                    </div>
                </td>

                <td>
                    <label class="control-label col-md-2">Harga</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.Price, "", new { @class = "text-danger" })
                    </div>
                </td>
            </tr>
        }
    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>
    $(document).ready(function () {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSelectPayment", "Select2")',
            dataType: "json",
            beforeSend: function () {
                $("#payment").select2({ placeholder: "Mohon tunggu...", data: { id: null, text: null } }).prop("disabled", false);
            },
            success: function (result) {
                $("#payment").select2({ placeholder: "-- Pilih Metode Pembayaran --", data: result, allowClear: true }).prop("disabled", false);
                $("#payment").val(null).change();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown)
                $("#payment").select2({ placeholder: "Data not found", data: { id: null, text: null } }).prop("disabled", true);
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSelectCustomer", "Select2")',
            dataType: "json",
            beforeSend: function () {
                $("#customer").select2({ placeholder: "Mohon tunggu...", data: { id: null, text: null } }).prop("disabled", false);
            },
            success: function (result) {
                $("#customer").select2({ placeholder: "-- Pilih Pelanggan --", data: result, allowClear: true }).prop("disabled", false);
                $("#customer").val(null).change();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown)
                $("#customer").select2({ placeholder: "Data not found", data: { id: null, text: null } }).prop("disabled", true);
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSelectItem", "Select2")',
            dataType: "json",
            beforeSend: function () {
                $("#item").select2({ placeholder: "Mohon tunggu...", data: { id: null, text: null } }).prop("disabled", false);
            },
            success: function (result) {
                $("#item").select2({ placeholder: "-- Pilih Menu Cucian --", data: result, allowClear: true }).prop("disabled", false);
                $("#item").val(null).change();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown)
                $("#item").select2({ placeholder: "Data not found", data: { id: null, text: null } }).prop("disabled", true);
            }
        });
    });
</script>