@model LaundryWebapp.DataSource.Transaction

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Transaction</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Nama Pelanggan</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CustomerId, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "customer" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Menu Cucian</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ItemId, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "item" })
                @Html.ValidationMessageFor(model => model.ItemId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Metode Pembayaran</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PaymentId, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "payment" })
                @Html.ValidationMessageFor(model => model.PaymentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Status Pembayaran</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PaymentStatus, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "paymentStatus" })
                @Html.ValidationMessageFor(model => model.PaymentStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Potongan Harga</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiscountPrice, new { htmlAttributes = new { @class = "form-control", @id = "discount" } })
                @Html.ValidationMessageFor(model => model.DiscountPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Berat Cucian (.kg)</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", @id = "weight" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Total Harga</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @id = "price", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(document).ready(function () {
        var itemPrice = 0;
        var weight = 0.0;
        var discount = 0;
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSelectPayment", "Select2")',
            dataType: "json",
            beforeSend: function () {
                $("#payment").select2({ placeholder: "Mohon tunggu...", data: { id: null, text: null } }).prop("disabled", false);
            },
            success: function (result) {
                $("#payment").select2({ placeholder: "-- Pilih Metode Pembayaran --", data: result, allowClear: true }).prop("disabled", false);
                $("#payment").val(null).change();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $("#payment").select2({ placeholder: "Data not found", data: { id: null, text: null } }).prop("disabled", true);
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSelectCustomer", "Select2")',
            dataType: "json",
            beforeSend: function () {
                $("#customer").select2({ placeholder: "Mohon tunggu...", data: { id: null, text: null } }).prop("disabled", false);
            },
            success: function (result) {
                $("#customer").select2({ placeholder: "-- Pilih Pelanggan --", data: result, allowClear: true }).prop("disabled", false);
                $("#customer").val(null).change();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $("#customer").select2({ placeholder: "Data not found", data: { id: null, text: null } }).prop("disabled", true);
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSelectItem", "Select2")',
            dataType: "json",
            beforeSend: function () {
                $("#item").select2({ placeholder: "Mohon tunggu...", data: { id: null, text: null } }).prop("disabled", false);
            },
            success: function (result) {
                $("#item").select2({ placeholder: "-- Pilih Menu Cucian --", data: result, allowClear: true }).prop("disabled", false);
                $("#item").val(null).change();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $("#item").select2({ placeholder: "Data not found", data: { id: null, text: null } }).prop("disabled", true);
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSelectPaymentStatus", "Select2")',
            dataType: "json",
            beforeSend: function () {
                $("#paymentStatus").select2({ placeholder: "Mohon tunggu...", data: { id: null, text: null } }).prop("disabled", false);
            },
            success: function (result) {
                $("#paymentStatus").select2({ placeholder: "-- Pilih Status Pembayaran --", data: result, allowClear: true }).prop("disabled", false);
                $("#paymentStatus").val(null).change();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $("#paymentStatus").select2({ placeholder: "Data not found", data: { id: null, text: null } }).prop("disabled", true);
            }
        });

        $('#customer').on('select2:select', function (e) {
            $.ajax({
                type: "GET",
                url: '/MasterCustomers/GetItem?customerId=' + e.currentTarget.value,
                dataType: "json",
                success: function (result) {
                    if (result != null) {
                        $("#item").val(result.Id).change();
                        $("#item").prop("disabled", true);
                    }
                    else {
                        $("#item").val(null).change();
                        $("#item").prop("disabled", false);
                    }
                }
            });
        });

        $('#item').on('select2:select', function (e) {
            $.ajax({
                type: "GET",
                url: '/MasterItems/GetItem?Id=' + e.currentTarget.value,
                dataType: "json",
                success: function (result) {
                    itemPrice = result.Price;
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });
            $('#price').val(parseInt((itemPrice * weight) - discount));
        });

        $('#discount').change(function (e) {
            discount = e.currentTarget.value;
            $('#price').val(parseInt((itemPrice * weight) - discount));
        })

        $('#weight').change(function (e) {
            weight = e.currentTarget.value;
            $('#price').val(parseInt((itemPrice * weight) - discount));
        })
    });
</script>