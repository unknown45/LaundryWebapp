@model LaundryWebapp.DataSource.Transaction

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Transaction</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <label class="control-label col-md-2">No. Transaksi</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransactionNumber, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.TransactionNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Tgl Transaksi</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Nama Pelanggan</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CustomerId, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "customer" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Menu Cucian</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ItemId, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "item" })
                @Html.ValidationMessageFor(model => model.ItemId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Metode Pembayaran</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PaymentId, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "payment" })
                @Html.ValidationMessageFor(model => model.PaymentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Potongan Harga</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiscountPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiscountPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Berat Cucian (.kg)</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Total Harga</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Status Cucian</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "status" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Status Pembayaran</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PaymentStatus, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "paymentStatus" })
                @Html.ValidationMessageFor(model => model.PaymentStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>
    $(document).ready(function () {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSelectPayment", "Select2")',
            dataType: "json",
            beforeSend: function () {
                $("#payment").select2({ placeholder: "Mohon tunggu...", data: { id: null, text: null } }).prop("disabled", false);
            },
            success: function (result) {
                $("#payment").select2({ placeholder: "-- Pilih Metode Pembayaran --", data: result, allowClear: true }).prop("disabled", false);
                $("#payment").val('@Model.PaymentId').change();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown)
                $("#payment").select2({ placeholder: "Data not found", data: { id: null, text: null } }).prop("disabled", true);
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSelectCustomer", "Select2")',
            dataType: "json",
            beforeSend: function () {
                $("#customer").select2({ placeholder: "Mohon tunggu...", data: { id: null, text: null } }).prop("disabled", false);
            },
            success: function (result) {
                $("#customer").select2({ placeholder: "-- Pilih Pelanggan --", data: result, allowClear: true }).prop("disabled", true);
                $("#customer").val('@Model.CustomerId').change();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown)
                $("#customer").select2({ placeholder: "Data not found", data: { id: null, text: null } }).prop("disabled", true);
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSelectItem", "Select2")',
            dataType: "json",
            beforeSend: function () {
                $("#item").select2({ placeholder: "Mohon tunggu...", data: { id: null, text: null } }).prop("disabled", false);
            },
            success: function (result) {
                $("#item").select2({ placeholder: "-- Pilih Menu Cucian --", data: result, allowClear: true }).prop("disabled", false);
                $("#item").val('@Model.ItemId').change();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown)
                $("#item").select2({ placeholder: "Data not found", data: { id: null, text: null } }).prop("disabled", true);
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSelectStatus", "Select2")',
            dataType: "json",
            beforeSend: function () {
                $("#status").select2({ placeholder: "Mohon tunggu...", data: { id: null, text: null } }).prop("disabled", false);
            },
            success: function (result) {
                $("#status").select2({ placeholder: "-- Pilih Status Cucian --", data: result, allowClear: true }).prop("disabled", false);
                $("#status").val('@Model.Status').change();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown)
                $("#status").select2({ placeholder: "Data not found", data: { id: null, text: null } }).prop("disabled", true);
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSelectPaymentStatus", "Select2")',
            dataType: "json",
            beforeSend: function () {
                $("#paymentStatus").select2({ placeholder: "Mohon tunggu...", data: { id: null, text: null } }).prop("disabled", false);
            },
            success: function (result) {
                $("#paymentStatus").select2({ placeholder: "-- Pilih Status Pembayaran --", data: result, allowClear: true }).prop("disabled", false);
                $("#paymentStatus").val('@Model.PaymentStatus').change();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown)
                $("#paymentStatus").select2({ placeholder: "Data not found", data: { id: null, text: null } }).prop("disabled", true);
            }
        });
    });
</script>